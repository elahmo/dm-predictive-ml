#########################################
###Starting all estimators for cl: label_gross_6
#########################################
####################################################################################
################# Runing the itteration 1  of pipeline precomp      ###############
####################################################################################
| preprocessor:dummy | transfomer: dummy | reducer: dummy
{}
Starting precomp pipline for {}
Finished precomp pipline for {}
####################################################################################
################# Runing the itteration 2  of the GridSearchCV ####################
####################################################################################
***Starting [MLPClassifier] estimator run, pipeline: | preprocessor:dummy | transfomer: dummy | reducer: dummy 
##param_grid##
{'model__learning_rate_init': [0.1], 'model__hidden_layer_sizes': [(73,), (180,), (73, 73), (180, 180), (73, 73, 73), (180, 180, 180), (73, 73, 73, 73), (180, 180, 180, 180)]}
Fitting 4 folds for each of 8 candidates, totalling 32 fits
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180), total= 1.2min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,) .
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,), total=  34.4s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73), total= 1.1min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180), total= 1.4min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,) ..
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,), total=  15.9s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73), total= 1.6min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73), total=  48.5s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73), total= 1.0min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,) .
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,), total=  55.8s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73), total= 1.2min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,) .
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,), total=  42.1s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180), total= 2.2min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,) .
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180,), total=  36.8s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180), total= 2.6min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73), total=  55.7s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73), total= 1.8min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,) ..
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,), total=   1.2s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73), total= 1.0min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180), total= 2.4min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73), total=  51.3s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180), total= 2.7min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180), total= 1.1min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180), total= 2.4min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180), total=  57.9s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180), total= 2.5min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,) ..
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73,), total=  19.2s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73), total=  50.4s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(180, 180, 180, 180), total= 2.2min
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73), total=  53.4s
[CV] model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73) 
[CV]  model__learning_rate_init=0.1, model__hidden_layer_sizes=(73, 73, 73, 73), total= 1.5min
GREP_ME***Results of [MLPClassifier] estimatorrun are
{'split2_train_score': array([ 0.29210712,  0.29210712,  0.29281184,  0.29210712,  0.29210712,
        0.29210712,  0.29210712,  0.29210712]), 'std_score_time': array([ 0.51316108,  0.34729695,  0.78319946,  1.11227877,  1.23407225,
        0.00865592,  1.91702537,  0.26561385]), 'split1_test_score': array([ 0.29175476,  0.29175476,  0.29175476,  0.29281184,  0.29175476,
        0.29175476,  0.29175476,  0.29175476]), 'param_model__learning_rate_init': masked_array(data = [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'param_model__hidden_layer_sizes': masked_array(data = [(73,) (180,) (73, 73) (180, 180) (73, 73, 73) (180, 180, 180)
 (73, 73, 73, 73) (180, 180, 180, 180)],
             mask = [False False False False False False False False],
       fill_value = ?)
, 'split3_test_score': array([ 0.29268293,  0.29268293,  0.29374337,  0.29268293,  0.29268293,
        0.29268293,  0.29268293,  0.29268293]), 'std_train_score': array([ 0.00045878,  0.0004056 ,  0.0002938 ,  0.00094105,  0.00012851,
        0.00012851,  0.00012851,  0.00012851]), 'split2_test_score': array([ 0.29175476,  0.29386892,  0.29386892,  0.29175476,  0.29175476,
        0.29281184,  0.29175476,  0.29175476]), 'std_test_score': array([ 0.00038625,  0.00084137,  0.00099491,  0.000468  ,  0.00038625,
        0.000468  ,  0.00038625,  0.00038625]), 'mean_fit_time': array([  20.3196286 ,   42.02096659,   51.42332107,   68.72256094,
         66.44410324,  149.44344378,   81.30901396,  143.59650779]), 'split0_test_score': array([ 0.2918862,  0.2918862,  0.2918862,  0.2918862,  0.2918862,
        0.2918862,  0.2918862,  0.2918862]), 'params': ({'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73,)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (180,)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73, 73)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (180, 180)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73, 73, 73)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (180, 180, 180)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73, 73, 73, 73)}, {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (180, 180, 180, 180)}), 'split0_train_score': array([ 0.29206349,  0.29312169,  0.29206349,  0.29241623,  0.29206349,
        0.29206349,  0.29206349,  0.29206349]), 'mean_test_score': array([ 0.29201903,  0.29254757,  0.29281184,  0.2922833 ,  0.29201903,
        0.2922833 ,  0.29201903,  0.29201903]), 'split3_train_score': array([ 0.29215065,  0.29215065,  0.29215065,  0.29179866,  0.29179866,
        0.29179866,  0.29179866,  0.29179866]), 'std_fit_time': array([ 16.44316557,   8.43438927,   3.40496977,   9.32580158,
        17.55332778,  11.90548558,  17.64607894,   5.57927559]), 'rank_test_score': array([5, 2, 1, 3, 5, 3, 5, 5], dtype=int32), 'mean_train_score': array([ 0.29237137,  0.29245974,  0.29237137,  0.29263582,  0.2920191 ,
        0.2920191 ,  0.2920191 ,  0.2920191 ]), 'split1_train_score': array([ 0.2931642 ,  0.29245948,  0.29245948,  0.29422128,  0.29210712,
        0.29210712,  0.29210712,  0.29210712]), 'mean_score_time': array([ 0.34375077,  0.26786131,  0.79074377,  1.19935578,  1.41796029,
        0.02562875,  1.14291257,  0.18711948])}
GREP_ME***Best params of [MLPClassifier] estimator,pipeline:| preprocessor:dummy | transfomer: dummy | reducer: dummy  run are
{'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73, 73)}
GREP_ME***Best score of [MLPClassifier] estimator, pipeline:| preprocessor:dummy | transfomer: dummy | reducer: dummy run are
0.292811839323
#########################################
###Finished all estimators for cl: label_gross_6
#########################################
#########################################
#######Printing results for cl: label_gross_6
#########################################
{'MLPClassifier': {'score': 0.29281183932346722, 'best_cfg': {'model__learning_rate_init': 0.1, 'model__hidden_layer_sizes': (73, 73)}, 'pipe': '| preprocessor:dummy | transfomer: dummy | reducer: dummy'}}
priting simply sorted numbers, grep them to find the best cfg or cl: label_gross_6
[0.29281183932346722]
